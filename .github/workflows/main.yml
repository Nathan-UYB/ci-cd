name: CI/CD de l'application Node.js
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration de Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Mise à jour de la version Node.js

      - name: Installation des dépendances
        run: npm install # Installe toutes les dépendances du package.json

      - name: Démarrage du serveur en arrière-plan
        run: node server.js &

      - name: Attente du démarrage du serveur
        run: sleep 5

      - name: Test de l'endpoint /hello
        run: |
          response=$(curl -s http://localhost:3000/hello)
          if [ "$response" = "Hello World!" ]; then
            echo "✅ Test de l'endpoint /hello réussi."
          else
            echo "❌ Test de l'endpoint /hello échoué."
            exit 1
          fi

      - name: Test de l'endpoint /metrics
        run: |
          response=$(curl -s http://localhost:3000/metrics)
          if [[ "$response" == *"hello_requests_total"* ]]; then
            echo "✅ Test de l'endpoint /metrics réussi."
          else
            echo "❌ Test de l'endpoint /metrics échoué."
            exit 1
          fi

      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} .

      - name: Save Docker image as artifact
        run: docker save myapp:${{ github.sha }} | gzip > myapp.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: myapp.tar.gz